generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  password      String
  name          String
  height        Decimal @default(0)
  weight        Decimal @default(0)
  photoUrl      String @default("")
  refreshTokens RefreshToken[]
  UserHistoryRecipe UserHistoryRecipe[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id        String   @id @unique @default(uuid())
  name      String
  RecipeDetail RecipeDetail[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id        String   @id @unique @default(uuid())
  name      String
  RecipeDetail RecipeDetail[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Direction {
  id        String   @id @unique @default(uuid())
  name      String
  RecipeDetail RecipeDetail[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipe {
  id        String   @id @unique @default(uuid())
  title     String
  calories  Int
  fat       Int
  sodium    Int
  rating    Int
  image     String @default("")
  description String @db.Text
  RecipeDetail RecipeDetail[]
  UserHistoryRecipe UserHistoryRecipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RecipeDetail {
  id        String   @id @unique @default(uuid())
  recipeId  String
  Recipe    Recipe   @relation(fields: [recipeId], references: [id])
  categoryId String
  Category  Category @relation(fields: [categoryId], references: [id])
  ingredientId String
  Ingredient  Ingredient @relation(fields: [ingredientId], references: [id])
  directionId String
  Direction  Direction @relation(fields: [directionId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserHistoryRecipe {
  id        String   @id @unique @default(uuid())
  userId    String
  User      User     @relation(fields: [userId], references: [id])
  recipeId  String
  Recipe    Recipe   @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}